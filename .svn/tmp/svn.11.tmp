<?php
class Traslados extends CI_Controller
{
	public $char_error_open;
	public $char_error_close;
	public $session_data;
	public $success;
    public $error_msg;
    public $pdf;
	function __construct()
	{
		parent::__construct();
		$this->load->model('rides','',TRUE);
		$this->char_error_open = '<span class="btn btn-danger btn-xs" style="margin:3px;"> <button type="button" class="close" data-dismiss="alert" aria-hidden="true"> &nbsp;×</button>';
		$this->char_error_close = '</span>';
        $this->success = '';
        $this->error_msg = '';
        $this->name_img = '';
		if($this->session->userdata('logged_in'))
		{	
			$this->session_data = $this->session->userdata('logged_in');
		}
		else
		{
			redirect('login','refresh');
		}
	}
	public function nuevo(){
		$this->form_validation->set_error_delimiters($this->char_error_open,$this->char_error_close);
		
		$this->form_validation->set_rules('txt_cliente', 'Cliente', 'required|trim|xss_clean');
		$this->form_validation->set_rules('txt_referencial', 'Lugar Referencial', 'trim|required|min_length[5]|xss_clean');
		$this->form_validation->set_rules('txt_domicilio', 'Domicilio', 'trim|required|xss_clean');
		$this->form_validation->set_rules('txt_colonia', 'Colonia', 'trim|required|xss_clean');
		$this->form_validation->set_rules('txt_num_ext', 'Número Exterior', 'trim|required|numeric|xss_clean');
		$this->form_validation->set_rules('txt_cruce_uno', 'Cruce 1', 'trim|required|xss_clean');
		$this->form_validation->set_rules('txt_cruce_dos', 'Cruce 2', 'trim|required|xss_clean');
		$this->form_validation->set_rules('data_client', 'cliente', 'trim');
		$this->form_validation->set_rules('txt_nombre','Nombre', 'required|trim|xss_clean');
		$this->form_validation->set_rules('txt_num_pasajeros', 'Número de Pasajeros', 'trim|required|numeric|xss_clean');
		$this->form_validation->set_rules('txt_nombre_sol','Nombre del Solicitante','trim|required|xss_clean');
		$this->form_validation->set_rules('txt_traslado', 'Fecha de Traslado	', 'trim|required|exact_length[10]|xss_clean');
		$this->form_validation->set_rules('txt_hora', 'Hora de Traslado', 'trim|required|xss_clean');
		$this->form_validation->set_rules('txt_forma_pago', 'Formato de Pago', 'trim|required|xss_clean');
		$this->form_validation->set_rules('txt_conductor', 'Nombre del Conductor', 'trim|required|xss_clean');
		$this->form_validation->set_rules('txt_comprobante', 'Comprobante', 'trim|required|xss_clean');
		$this->form_validation->set_rules('txt_vehiculo', 'Vehículo', 'trim|required|xss_clean');
		$this->form_validation->set_rules('txt_monto', 'Monto', 'trim|required|numeric|xss_clean');
		$this->form_validation->set_rules('txt_observaciones', 'Observaciones', 'trim|max_length[100]|xss_clean');
		$this->form_validation->set_message('required', 'El  %s es requerido');
		$this->form_validation->set_message('valid_email', 'El %s no es válido');
		if($this->form_validation->run() === TRUE){
			
			 $result = $this->rides->crear();
			if($result['status'] === FALSE)
			{
				$this->error_msg = '<div class="alert alert-info text-center"> <button type="button" class="close" data-dismiss="alert" aria-hidden="true"> &nbsp;×</button>'.$result['msg'].'</div>';
			}
			else
			{	
				$this->session->set_flashdata('msg','<div class="alert alert-success"><button type="button" class="close" data-dismiss="alert" aria-hidden="true"> &nbsp;×</button>'.$result['msg'].'</div>');
				redirect("nuevo_traslado","refresh");	
			}
		}

			$data['info'] = $this->rides->catalogos();
			if($data['info']['status'] === FALSE){
				$this->error_msg = $data['info']['msg'];
				$data['info'] = array();
			}else{
				$data['info'] = $data['info']['info'];	
			}
			
			$data['nombre'] = $this->session_data['nombre'];
			$data['apellido'] = $this->session_data['apellido'];
			$data['usuario_i'] = $this->session_data['usuario_i'];
			$data['imagen_perfil'] = $this->session_data['imagen_perfil'];
			$data['success'] = $this->success;
			$data['error'] = $this->error_msg;
            $data['titulo'] = 'Agendar Traslado';
			$data['content']  = 'nuevo_traslado';
			$this->load->view('main_template',$data);
		
	}
	public function agenda_traslados(){


			$data['traslados']  = $this->rides->catalogo_traslados();
			if(($data['traslados']) === FALSE){
				$this->error_msg = '<div class="alert  text-danger">No hay traslados agendados en el sistema. agendo uno nuevo <a class="btn btn-green" href="'.base_url().'nuevo_traslado.html">Aquí</a></div>';
			}
			$data['nombre'] = $this->session_data['nombre'];
			$data['apellido'] = $this->session_data['apellido'];
			$data['usuario_i'] = $this->session_data['usuario_i'];
			$data['imagen_perfil'] = $this->session_data['imagen_perfil'];
			$data['success'] = $this->success;
			$data['error'] = $this->error_msg;
            $data['titulo'] = 'Agenda de Traslados';
			$data['content']  = 'agenda_de_traslados';
			$this->load->view('main_template',$data);
	}
	public function informacion_cliente(){
		if($this->input->is_ajax_request() && $this->input->post('cliente')){
			$result = $this->customers->get_cliente();
			if($result === FALSE){
				$data = array('status'=> FALSE,'msg'=>'<div class="alert alert-danger">No se encontraron resultados para mostrar</div>');
				echo json_encode($data);
			}else{
				
				$this->session->set_userdata('rfc_cliente',strtoupper($this->input->post('cliente')));
				$this->session->set_userdata('email_cliente',$result->txt_email);
				$data = array('status'=>TRUE,'cliente'=>$result);
				echo json_encode($data);
			}
		}
		else{
			show_404();
		}
		
	}
	public function servicio()
	{
		if($this->input->is_ajax_request()){
			$this->form_validation->set_error_delimiters($this->char_error_open,$this->char_error_close);
			$this->form_validation->set_rules('txt_km_init', 'Km inicial', 'required|trim|xss_clean|min_length[5]|max_length[10]');
			$this->form_validation->set_rules('txt_km_fin', 'km Final', 'trim|required|min_length[5]|xss_clean|max_length[10]');
			$this->form_validation->set_rules('txt_gasolina', 'Monto de Gasolina', 'numeric|trim|required|xss_clean');
			$this->form_validation->set_rules('txt_monto', 'Monto de Traslado', 'numeric|trim|required|xss_clean');
			$this->form_validation->set_message('required', 'El  %s es requerido');
			if ($this->form_validation->run() === FALSE)
				{ 
					$data = array('msg'=>validation_errors(),'status'=>FALSE);
					echo json_encode($data);
				}
				else
				{
					$result =   $this->rides->reporte_servicio();
					$data = array('status'=>$result['status'],'msg'=>$result['msg']);
					echo json_encode($data);
				}

			}
			else{
				show_404();
			}
	}
	public function update_status(){
		if($this->input->is_ajax_request() && $this->input->post('ride') && $this->input->post('stat')){
			$result = $this->rides->status_traslado();
			$data= array('status'=>$result['status'],'msg'=>$result['msg']);
			echo json_encode($data);
		}
		else{
			show_404();
		}
	}
	public function pdf($param){


		$traslados = $this->rides->pdf_traslado($param);
		
		if(($traslados) === FALSE){
			$this->error_msg = '<div class="alert  text-danger">El comprobante no esta disponible comuniquese con el administrador del sistema.</div>';
		}
		else
		{
			$this->load->library('pdf');
		$this->pdf = new Pdf();
		$this->pdf->setTipoReporte('traslado');
		$this->pdf->AddPage();
		$this->pdf->SetFillColor(250,002,006);
		$this->pdf->SetDrawColor(250,002,006);
		$this->pdf->SetFont('Arial','B',70);
    	$this->pdf->SetTextColor(250,190,203);
    	$this->pdf->RotatedText(35,220,'TRASLADOS GDL',45);
    	$this->pdf->SetTextColor(0,0,0);
		$this->pdf->SetFont('Arial', 'B', 12);

		$this->pdf->SetXY(20,60);
		
		$this->pdf->Cell(60,10,'Folio de Traslado:',0,0,'L');
		$this->pdf->SetTextColor(255,255,255);
		$this->pdf->Cell(100,8,    $traslados['IDCOMPROBANTE']     ,1,1,'C',TRUE);

		$this->pdf->SetXY(20,85);
		$this->pdf->SetTextColor(0,0,0);
		$this->pdf->Cell(60,10,'Cliente:',0,0,'L');
		$this->pdf->SetTextColor(255,255,255);
		$this->pdf->Cell(100,8,        $traslados['R_SOCIAL'],1,0,'C',TRUE);

		$this->pdf->SetXY(20,110);
		$this->pdf->SetTextColor(0,0,0);
		$this->pdf->Cell(60,10,'Fecha del Viaje:',0,0,'L');
		$this->pdf->SetTextColor(255,255,255);
		$this->pdf->Cell(100,8,         $traslados['FECHA'],1,0,'C',TRUE);

		$this->pdf->SetXY(20,135);
		$this->pdf->SetTextColor(0,0,0);
		$this->pdf->Cell(60,10,'Hora del Viaje:',0,0,'L');
		$this->pdf->SetTextColor(255,255,255);
		$this->pdf->Cell(100,8,     $traslados['HORA'],1,0,'C',TRUE);

		$this->pdf->SetXY(20,160);
		$this->pdf->SetTextColor(0,0,0);
		$this->pdf->Cell(60,10,'Destino:',0,0,'L');
		$this->pdf->SetTextColor(255,255,255);
		$this->pdf->Cell(100,8,         strtoupper(utf8_decode($traslados['DOMICILIO'])),1,0,'C',TRUE);

		$this->pdf->SetXY(20,185);
		$this->pdf->SetTextColor(0,0,0);
		$this->pdf->Cell(60,10,'Chofer:',0,0,'L');
		$this->pdf->SetTextColor(255,255,255);
		$this->pdf->Cell(100,8,         $traslados['NOMBRE'],1,0,'C',TRUE);

		$this->pdf->SetXY(20,210);
		$this->pdf->SetTextColor(0,0,0);
		$this->pdf->Cell(60,10,'Nombre del Pasajero:',0,0,'L');
		$this->pdf->SetTextColor(255,255,255);
		$this->pdf->Cell(100,8,       $traslados['NOMBRE_PASAJERO'],1,0,'C',TRUE);
		$this->pdf->SetTextColor(0,0,0);
		$this->pdf->SetXY(15,235);
		$this->pdf->Cell(60,10,'Gasto de Gasolina',0,0,'C');
		$this->pdf->Cell(60,10,'Kilometraje Inicial',0,0,'C');
		$this->pdf->Cell(60,10,'Kilmetraje Final',0,1,'C');
		$this->pdf->SetX(15);
		$this->pdf->Cell(60,10,'',1,0,'C');
		$this->pdf->Cell(60,10,'',1,0,'C');
		$this->pdf->Cell(60,10,'',1,0,'C');
		
		$this->pdf->RoundedRect(10,10,190,279,1.5,'1234');//recuadro final

	    $this->pdf->AliasNbPages();

		$this->pdf->Output($this->pdf->titulo.".pdf",'D');
		}
	}
}
