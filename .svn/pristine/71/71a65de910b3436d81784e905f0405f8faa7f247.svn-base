<?php
class Traslados extends CI_Controller
{
	public $char_error_open;
	public $char_error_close;
	public $session_data;
	public $success;
    public $error_msg;
	function __construct()
	{
		parent::__construct();
		$this->load->model('rides','',TRUE);
		$this->char_error_open = '<span class="btn btn-danger btn-xs" style="margin:3px;"> <button type="button" class="close" data-dismiss="alert" aria-hidden="true"> &nbsp;×</button>';
		$this->char_error_close = '</span>';
        $this->success = '';
        $this->error_msg = '';
        $this->name_img = '';
		if($this->session->userdata('logged_in'))
		{	
			$this->session_data = $this->session->userdata('logged_in');
		}
		else
		{
			redirect('login','refresh');
		}
	}
	public function nuevo(){
		$this->form_validation->set_error_delimiters($this->char_error_open,$this->char_error_close);
		
		$this->form_validation->set_rules('txt_cliente', 'Cliente', 'required|trim|xss_clean');
		$this->form_validation->set_rules('txt_referencial', 'Lugar Referencial', 'trim|required|min_length[5]|xss_clean');
		$this->form_validation->set_rules('txt_domicilio', 'Domicilio', 'trim|required|xss_clean');
		$this->form_validation->set_rules('txt_colonia', 'Colonia', 'trim|required|xss_clean');
		$this->form_validation->set_rules('txt_num_ext', 'Número Exterior', 'trim|required|numeric|xss_clean');
		$this->form_validation->set_rules('txt_cruce_uno', 'Cruce 1', 'trim|required|xss_clean');
		$this->form_validation->set_rules('txt_cruce_dos', 'Cruce 2', 'trim|required|xss_clean');
		$this->form_validation->set_rules('data_client', 'cliente', 'trim');
		$this->form_validation->set_rules('txt_nombre','Nombre', 'required|trim|xss_clean');
		$this->form_validation->set_rules('txt_num_pasajeros', 'Número de Pasajeros', 'trim|required|numeric|xss_clean');
		$this->form_validation->set_rules('txt_nombre_sol','Nombre del Solicitante','trim|required|xss_clean');
		$this->form_validation->set_rules('txt_traslado', 'Fecha de Traslado	', 'trim|required|exact_length[10]|xss_clean');
		$this->form_validation->set_rules('txt_hora', 'Hora de Traslado', 'trim|required|xss_clean');
		$this->form_validation->set_rules('txt_forma_pago', 'Formato de Pago', 'trim|required|xss_clean');
		$this->form_validation->set_rules('txt_conductor', 'Nombre del Conductor', 'trim|required|xss_clean');

		$this->form_validation->set_rules('txt_vehiculo', 'Vehículo', 'trim|required|xss_clean');
		$this->form_validation->set_rules('txt_monto', 'Monto', 'trim|required|numeric|xss_clean');
		$this->form_validation->set_rules('txt_observaciones', 'Observaciones', 'trim|max_length[100]|xss_clean');
		$this->form_validation->set_message('required', 'El  %s es requerido');
		$this->form_validation->set_message('valid_email', 'El %s no es válido');
		if($this->form_validation->run() === TRUE){
			
			 $result = $this->rides->crear();
			if($result['status'] === FALSE)
			{
				$this->error_msg = '<div class="alert alert-info text-center"> <button type="button" class="close" data-dismiss="alert" aria-hidden="true"> &nbsp;×</button>'.$result['msg'].'</div>';
			}
			else
			{	
				$this->session->set_flashdata('msg','<div class="alert alert-success">'.$result['msg'].'</div>');
				redirect("nuevo_traslado","refresh");
			}
		}

			$data['info'] = $this->rides->catalogos();
			if($data['info']['status'] === FALSE){
				$this->error_msg = $data['info']['msg'];
				$data['info'] = array();
			}
			$data['info'] = $data['info']['info'];
			$data['nombre'] = $this->session_data['nombre'];
			$data['apellido'] = $this->session_data['apellido'];
			$data['usuario_i'] = $this->session_data['usuario_i'];
			$data['imagen_perfil'] = $this->session_data['imagen_perfil'];
			$data['success'] = $this->success;
			$data['error'] = $this->error_msg;
            $data['titulo'] = 'Agregar Cliente';
			$data['content']  = 'nuevo_traslado';
			$this->load->view('main_template',$data);
		
	}
	public function catalogo_clientes(){


			$data['clientes']  = $this->customers->catalogo_cliente();
			if(($data['clientes']) === FALSE){
				$this->error_msg = '<div class="alert  text-danger">No hay Clientes Registrados en el sistema. Registre uno nuevo <a class="btn btn-green" href="'.base_url().'nuevo_cliente.html">Aquí</a></div>';
			}
			$data['nombre'] = $this->session_data['nombre'];
			$data['apellido'] = $this->session_data['apellido'];
			$data['usuario_i'] = $this->session_data['usuario_i'];
			$data['imagen_perfil'] = $this->session_data['imagen_perfil'];
			$data['success'] = $this->success;
			$data['error'] = $this->error_msg;
            $data['titulo'] = 'Catalogo de Clientes';
			$data['content']  = 'catalogo_clientes';
			$this->load->view('main_template',$data);
	}
	public function informacion_cliente(){
		if($this->input->is_ajax_request() && $this->input->post('cliente')){
			$result = $this->customers->get_cliente();
			if($result === FALSE){
				$data = array('status'=> FALSE,'msg'=>'<div class="alert alert-danger">No se encontraron resultados para mostrar</div>');
				echo json_encode($data);
			}else{
				
				$this->session->set_userdata('rfc_cliente',strtoupper($this->input->post('cliente')));
				$this->session->set_userdata('email_cliente',$result->txt_email);
				$data = array('status'=>TRUE,'cliente'=>$result);
				echo json_encode($data);
			}
		}
		else{
			show_404();
		}
		
	}
	public function update_info_cliente(){
		if($this->input->is_ajax_request()){
			
			$this->form_validation->set_error_delimiters($this->char_error_open,$this->char_error_close);
			$this->form_validation->set_rules('txt_rfc', 'RFC', 'required|trim|xss_clean|exact_length[13]');
			$this->form_validation->set_rules('txt_nombre','Nombre', 'required|trim|xss_clean');
			$this->form_validation->set_rules('txt_razon','Razón Social', 'required|trim|xss_clean');
			$this->form_validation->set_rules('txt_apepat','Apellido Paterno', 'required|trim|xss_clean');
			$this->form_validation->set_rules('txt_apemat','Apellido Materno', 'required|trim|xss_clean|xss_clean');
			$this->form_validation->set_rules('txt_fecha_nac', 'Fecha de Nacimiento', 'trim|required|exact_length[10]|xss_clean');
			$this->form_validation->set_rules('txt_domicilio', 'Domicilio', 'trim|required|xss_clean');
			$this->form_validation->set_rules('txt_colonia', 'Colonia', 'trim|required|xss_clean');
			$this->form_validation->set_rules('txt_num_ext', 'Número Exterior', 'trim|required|numeric|xss_clean');
			$this->form_validation->set_rules('txt_cp', 'Código Postal', 'trim|required|numeric|exact_length[5|xss_clean');
			$this->form_validation->set_rules('txt_num_int', 'Número Interior', 'trim|xss_clean');
			$this->form_validation->set_rules('txt_cruce_uno', 'Cruce 1', 'trim|required|xss_clean');
			$this->form_validation->set_rules('txt_cruce_dos', 'Cruce 2', 'trim|required|xss_clean');
			$this->form_validation->set_rules('txt_telefono_uno', 'Teléfono 1', 'trim|exact_length[10]|xss_clean|required');
			$this->form_validation->set_rules('txt_telefono_dos', 'Teléfono 2', 'trim|exact_length[10]|xss_clean');
			$this->form_validation->set_rules('txt_email','Correo Electronico', 'required|valid_email|trim|xss_clean');	
			$this->form_validation->set_message('required', 'El  %s es requerido');
			$this->form_validation->set_message('valid_email', 'El %s no es válido');

			if ($this->form_validation->run() === FALSE)
			{ 
				$data = array('msg'=>validation_errors(),'status'=>FALSE);
				echo json_encode($data);
			}
			else
			{
				$result =   $this->customers->update_cliente();
				$data = array('status'=>$result['status'],'msg'=>$result['msg']);
				echo json_encode($data);
			}
		}
		else{
			show_404();
		}
	}
}
